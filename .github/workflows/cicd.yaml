name: CI and CD for Assessment Tax Project

on:
  push:
    branches: [main]
env:
  PROJECT_NAME: basic-Kubernetes

jobs:
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.1
      - name: Run Unit Test
        run: |
          cd assessment-tax
          go test -v ./... -coverprofile=coverage.out
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./assessment-tax/coverage.out

  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        name: Download coverage file
        with:
          name: coverage
          path: ./assessment-tax/
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: ./assessment-tax
          args: >
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.language=go  
            -Dsonar.projectKey=${{ env.PROJECT_NAME }}
      - name: Generate SonarQube report
        run: |
          cd assessment-tax
          curl -s -u "${{ secrets.SONAR_TOKEN }}:" "${{ secrets.SONAR_HOST_URL }}/api/measures/component?component=${{ env.PROJECT_NAME }}&metricKeys=coverage&format=json" > sonarqube-report.json

  build-and-push-docker-image:
    name: Build Image and Push to Registry
    runs-on: ubuntu-latest
    needs: [sonarqube]
    steps:
      - uses: actions/checkout@v3
      - name: Setup SHA
        run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Login ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push api image
        uses: docker/build-push-action@v4
        with:
          context: ./assessment-tax
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ghcr.io/lgrow101/basic-kubernetes-api:${{ env.GITHUB_SHA }}
      - name: Build and push client image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ghcr.io/lgrow101/basic-kubernetes-client:${{ env.GITHUB_SHA }}

  gitops-versioning:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: config git
        run: |
          git --version
          git config user.name "robot"    
          git config user.email "lgrow101@gmail.com"
      - name: change image tag to deploy
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          sed -i -E "s/ghcr.io\/lgrow101\/basic-kubernetes-api.*$/ghcr.io\/lgrow101\/basic-kubernetes-api:${GITHUB_SHA}/" k8s/api-deployment.yml
          sed -i -E "s/ghcr.io\/lgrow101\/basic-kubernetes-client.*$/ghcr.io\/lgrow101\/basic-kubernetes-client:${GITHUB_SHA}/" k8s/client-deployment.yml
          git add k8s/api-deployment.yml k8s/client-deployment.yml
          git commit -m "[skip actions] ðŸ¤– change docker image version to ${GITHUB_SHA}"
          git pull --rebase
          git push
