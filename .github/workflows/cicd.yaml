name: CI and CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.1
      - name: Build
        run: go build -v ./...
        working-directory: assessment-tax
      - name: Test
        run: |
          go test -v ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out
        working-directory: assessment-tax

  sonarqube:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: assessment-tax
          args: >
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.projectKey=basic-Kubernetes

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    needs: [test, sonarqube] # ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏° jobs ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå workflow ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }} # ‡πÉ‡∏ä‡πâ GITHUB_TOKEN ‡πÅ‡∏ó‡∏ô G_TOKEN

      - name: Build and push API image
        uses: docker/build-push-action@v2
        with:
          context: ./assessment-tax
          file: ./assessment-tax/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            locker01/assessment-tax-api:${{ github.sha }}
            ghcr.io/${{ github.repository }}/assessment-tax-api:${{ github.sha }}

      - name: Build and push Client image
        uses: docker/build-push-action@v2
        with:
          context: ./client
          file: ./client/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            locker01/assessment-tax-client:${{ github.sha }}
            ghcr.io/${{ github.repository }}/assessment-tax-client:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  gitops-versioning:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: change image tag
        run: |
          git --version
          git config user.name "locker01"
          git config user.email "lgrow101@gmail.com"
          sed -i -E "s/ghcr.io\/lgrow101\/basic-kubernetes\/assessment-tax-api.*$/ghcr.io\/lgrow101\/basic-kubernetes\/assessment-tax-api:${GITHUB_SHA}/" k8s/backend/api-deployment.yml
          sed -i -E "s/ghcr.io\/lgrow101\/basic-kubernetes\/assessment-tax-client.*$/ghcr.io\/lgrow101\/basic-kubernetes\/assessment-tax-client:${GITHUB_SHA}/" k8s/frontend/client-deployment.yml
          git add k8s/backend/api-deployment.yml k8s/frontend/client-deployment.yml
          git commit -m "ü§ñ change docker image version to ${GITHUB_SHA}"
      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          branch: main
