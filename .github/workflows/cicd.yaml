name: CI and CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.1
      - name: Build
        run: go build -v ./...
        working-directory: assessment-tax
      - name: Test
        run: |
          go test -v ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out
        working-directory: assessment-tax

  sonarqube:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: assessment-tax
          args: >
            -Dsonar.projectKey=basic-Kubernetes
            -Dsonar.go.coverage.reportPaths=coverage.out

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    needs: [test, sonarqube]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API image
        uses: docker/build-push-action@v3
        with:
          context: ./assessment-tax
          file: ./assessment-tax/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            locker01/assessment-tax-api:${{ github.sha }}
            ghcr.io/${{ github.repository }}/assessment-tax-api:${{ github.sha }}

      - name: Build and push Client image
        uses: docker/build-push-action@v3
        with:
          context: ./client
          file: ./client/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            locker01/assessment-tax-client:${{ github.sha }}
            ghcr.io/${{ github.repository }}/assessment-tax-client:${{ github.sha }}

  gitops-versioning:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update image tags
        run: |
          sed -i "s|image: .*assessment-tax-api.*|image: ghcr.io/${{ github.repository }}/assessment-tax-api:${{ github.sha }}|" k8s/backend/api-deployment.yml
          sed -i "s|image: .*assessment-tax-client.*|image: ghcr.io/${{ github.repository }}/assessment-tax-client:${{ github.sha }}|" k8s/frontend/client-deployment.yml

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add k8s/backend/api-deployment.yml k8s/frontend/client-deployment.yml
          git commit -m "Update image tags to ${{ github.sha }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
