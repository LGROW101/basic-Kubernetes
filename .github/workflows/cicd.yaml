name: CI and CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.1
      - name: Build
        run: go build -v ./...
        working-directory: assessment-tax
      - name: Test
        run: |
          go test -v ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out
        working-directory: assessment-tax

  sonarqube:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarQube scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli-4.6.2.2472-linux.zip
          echo "$PWD/sonar-scanner-4.6.2.2472-linux/bin" >> $GITHUB_PATH

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          cd assessment-tax
          go build ./...
          go test ./... -coverprofile=coverage.out
          sonar-scanner -Dsonar.projectKey=basic-Kubernetes -Dsonar.go.coverage.reportPaths=coverage.out

      - name: Generate SonarQube report
        run: |
          cd assessment-tax
          curl -s -u "${{ secrets.SONAR_TOKEN }}:" "${{ secrets.SONAR_HOST_URL }}/api/measures/component?component=basic-Kubernetes&metricKeys=coverage&format=json" > sonarqube-report.json

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    needs: [test, sonarqube]

    steps:
      - uses: actions/checkout@v3

      - name: Setup SHA
        run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

        - name: Build and push api image
        uses: docker/build-push-action@v2
        with:
          context: ./assessment-tax
          file: ./assessment-tax/Dockerfile
          tags: |
            ghcr.io/lgrow101/basic-kubernetes/assessment-tax-api:${{ env.GITHUB_SHA }}
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and push client image
        uses: docker/build-push-action@v2
        with:
          context: ./client
          file: ./client/Dockerfile
          tags: |
            ghcr.io/lgrow101/basic-kubernetes/assessment-tax-client:${{ env.GITHUB_SHA }}
          push: ${{ github.ref == 'refs/heads/main' }}

  gitops-versioning:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: change image tag
        run: |
          git --version
          git config user.name "locker01"
          git config user.email "lgrow101@gmail.com"
          sed -i -E "s/ghcr.io\/lgrow101\/basic-kubernetes\/assessment-tax-api.*$/ghcr.io\/lgrow101\/basic-kubernetes\/assessment-tax-api:${GITHUB_SHA}/" k8s/backend/api-deployment.yml
          sed -i -E "s/ghcr.io\/lgrow101\/basic-kubernetes\/assessment-tax-client.*$/ghcr.io\/lgrow101\/basic-kubernetes\/assessment-tax-client:${GITHUB_SHA}/" k8s/frontend/client-deployment.yml
          git add k8s/backend/api-deployment.yml k8s/frontend/client-deployment.yml
          git commit -m "ðŸ¤– change docker image version to ${GITHUB_SHA}"
      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
