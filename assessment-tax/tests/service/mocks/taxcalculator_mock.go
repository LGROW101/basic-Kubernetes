// Code generated by MockGen. DO NOT EDIT.
// Source: ../../service/taxcalculator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "github.com/LGROW101/assessment-tax/model"
	gomock "github.com/golang/mock/gomock"
)

// MockTaxCalculatorService is a mock of TaxCalculatorService interface.
type MockTaxCalculatorService struct {
	ctrl     *gomock.Controller
	recorder *MockTaxCalculatorServiceMockRecorder
}

// MockTaxCalculatorServiceMockRecorder is the mock recorder for MockTaxCalculatorService.
type MockTaxCalculatorServiceMockRecorder struct {
	mock *MockTaxCalculatorService
}

// NewMockTaxCalculatorService creates a new mock instance.
func NewMockTaxCalculatorService(ctrl *gomock.Controller) *MockTaxCalculatorService {
	mock := &MockTaxCalculatorService{ctrl: ctrl}
	mock.recorder = &MockTaxCalculatorServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaxCalculatorService) EXPECT() *MockTaxCalculatorServiceMockRecorder {
	return m.recorder
}

// CalculateTax mocks base method.
func (m *MockTaxCalculatorService) CalculateTax(totalIncome, wht float64, allowances []model.Allowance) (*model.TaxCalculationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CalculateTax", totalIncome, wht, allowances)
	ret0, _ := ret[0].(*model.TaxCalculationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CalculateTax indicates an expected call of CalculateTax.
func (mr *MockTaxCalculatorServiceMockRecorder) CalculateTax(totalIncome, wht, allowances interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CalculateTax", reflect.TypeOf((*MockTaxCalculatorService)(nil).CalculateTax), totalIncome, wht, allowances)
}

// GetAllCalculations mocks base method.
func (m *MockTaxCalculatorService) GetAllCalculations() ([]*model.TaxCalculation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllCalculations")
	ret0, _ := ret[0].([]*model.TaxCalculation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllCalculations indicates an expected call of GetAllCalculations.
func (mr *MockTaxCalculatorServiceMockRecorder) GetAllCalculations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllCalculations", reflect.TypeOf((*MockTaxCalculatorService)(nil).GetAllCalculations))
}
